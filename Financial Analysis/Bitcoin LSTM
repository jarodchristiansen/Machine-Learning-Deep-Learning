{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Bitcoin LSTM.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "toc_visible": true,
      "authorship_tag": "ABX9TyMSNcr9UnfXwX2uOmNExxLB",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/jarodchristiansen/PythonProjects/blob/master/Bitcoin_LSTM.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Xi0f1EiIZhhC",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 212
        },
        "outputId": "4e655af0-d7a8-42c8-b99c-db97aec2884d"
      },
      "source": [
        "!pip install requests\n",
        "!pip install pandas\n",
        "!pip install numpy"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Requirement already satisfied: requests in /usr/local/lib/python3.6/dist-packages (2.23.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests) (2020.6.20)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests) (3.0.4)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests) (1.24.3)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests) (2.10)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.6/dist-packages (1.0.5)\n",
            "Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.6/dist-packages (from pandas) (2018.9)\n",
            "Requirement already satisfied: python-dateutil>=2.6.1 in /usr/local/lib/python3.6/dist-packages (from pandas) (2.8.1)\n",
            "Requirement already satisfied: numpy>=1.13.3 in /usr/local/lib/python3.6/dist-packages (from pandas) (1.18.5)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.6/dist-packages (from python-dateutil>=2.6.1->pandas) (1.15.0)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (1.18.5)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "u38g3aquaDm5",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 161
        },
        "outputId": "bdd2f5ac-c626-4a57-aad8-ee11e2ff06cf"
      },
      "source": [
        "import requests\n",
        "from prettytable import PrettyTable\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import statsmodels.api as sm\n",
        "import seaborn as sns\n",
        "sns.set()\n",
        "\n",
        "import pandas as pd\n",
        "import gspread\n",
        "from gspread_dataframe import get_as_dataframe, set_with_dataframe\n",
        "from google.colab import drive, files\n",
        "drive.mount('/content/drive')\n",
        "from google.colab import auth\n",
        "auth.authenticate_user()\n",
        "from oauth2client.client import GoogleCredentials\n",
        "gc = gspread.authorize(GoogleCredentials.get_application_default())"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n",
            "  import pandas.util.testing as tm\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly&response_type=code\n",
            "\n",
            "Enter your authorization code:\n",
            "··········\n",
            "Mounted at /content/drive\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WWuOMttE6oLG",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "2b8dd23c-bdec-45f6-e488-2f3a7767ca40"
      },
      "source": [
        "cycles = []\n",
        "urls = []\n",
        "from datetime import datetime  \n",
        "from datetime import timedelta  \n",
        "\n",
        "timer = datetime.date(datetime(year=2020, month=5, day=3)) \n",
        "\n",
        "for i in range(1):\n",
        " timer = timer + timedelta(days=1)\n",
        " #cycles.append(timer)\n",
        " print(timer)\n",
        " urls.append('https://rest.coinapi.io/v1/ohlcv/BTC/USD/history?period_id=1DAY&time_start={}T00:00:00'.format(timer))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "2020-05-04\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0U30Bu2W9uux",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "4fdc29d8-e674-4f44-b0d6-93dadb927cc6"
      },
      "source": [
        "cycles"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "L-a6YVnfCjTC",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "urls"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2_BFzvLjxoFa",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "apikey = ''\n",
        "datas = []\n",
        "headers = {\n",
        "    'X-CoinAPI-Key': apikey\n",
        "}\n",
        "for url in urls:\n",
        " response = requests.get(url, headers=headers).json()\n",
        " datas.append(response)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UXwlxYrWE0ig",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 372
        },
        "outputId": "53ac2d3c-e698-4ec6-9954-208c857bd8dc"
      },
      "source": [
        "datas[89]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[{'price_close': 11810.07,\n",
              "  'price_high': 11894.73,\n",
              "  'price_low': 11228.0,\n",
              "  'price_open': 11351.61,\n",
              "  'time_close': '2020-08-01T23:59:59.9607290Z',\n",
              "  'time_open': '2020-08-01T00:00:00.2127820Z',\n",
              "  'time_period_end': '2020-08-02T00:00:00.0000000Z',\n",
              "  'time_period_start': '2020-08-01T00:00:00.0000000Z',\n",
              "  'trades_count': 238735,\n",
              "  'volume_traded': 38179.618191884},\n",
              " {'price_close': 11173.92,\n",
              "  'price_high': 12134.29,\n",
              "  'price_low': 10546.15,\n",
              "  'price_open': 11810.07,\n",
              "  'time_close': '2020-08-02T22:30:11.3495050Z',\n",
              "  'time_open': '2020-08-02T00:00:00.1568830Z',\n",
              "  'time_period_end': '2020-08-03T00:00:00.0000000Z',\n",
              "  'time_period_start': '2020-08-02T00:00:00.0000000Z',\n",
              "  'trades_count': 252856,\n",
              "  'volume_traded': 51680.403142733}]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uEmsByEUFAXm",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "start_date = []\n",
        "price_open = []\n",
        "price_close = []\n",
        "price_high = []\n",
        "price_low = []\n",
        "trades_count = []\n",
        "volume_traded = []\n",
        "\n",
        "for request in datas:\n",
        "  for day in request:\n",
        "    for key, value in day.items():\n",
        "     if key == 'time_period_start':\n",
        "       start_date.append(value.split('T')[0])\n",
        "     elif key == 'price_open':\n",
        "       price_open.append(value)\n",
        "     elif key == 'price_close':\n",
        "       price_close.append(value)\n",
        "     elif key == 'price_high':\n",
        "       price_high.append(value)\n",
        "     elif key == 'price_low':\n",
        "       price_low.append(value)\n",
        "     elif key == 'trades_count':\n",
        "       trades_count.append(value)\n",
        "     if key == 'volume_traded':\n",
        "       volume_traded.append(value)          "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hqio5J_pG6SK",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data = pd.DataFrame()\n",
        "\n",
        "data['Date'] = start_date\n",
        "data['Open'] = price_open\n",
        "data['High'] = price_high\n",
        "data['Low'] = price_low\n",
        "data['Close'] = price_close\n",
        "data['Volume'] = volume_traded"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ez4JOvW1HIVG",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data.set_index('Date', inplace=True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SUHcyAakM60u",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 315
        },
        "outputId": "c59b9a74-09b0-413c-bad8-ee76c83afa60"
      },
      "source": [
        "data.drop(axis=1, columns='index', inplace=True)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "KeyError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-59-4b368f18dbd1>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'index'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   3995\u001b[0m             \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3996\u001b[0m             \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minplace\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3997\u001b[0;31m             \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3998\u001b[0m         )\n\u001b[1;32m   3999\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   3934\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32min\u001b[0m \u001b[0maxes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3935\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3936\u001b[0;31m                 \u001b[0mobj\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_drop_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3937\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3938\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_drop_axis\u001b[0;34m(self, labels, axis, level, errors)\u001b[0m\n\u001b[1;32m   3968\u001b[0m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3969\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3970\u001b[0;31m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3971\u001b[0m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0maxis_name\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mnew_axis\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3972\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, errors)\u001b[0m\n\u001b[1;32m   5016\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mmask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0many\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5017\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0merrors\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;34m\"ignore\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5018\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"{labels[mask]} not found in axis\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5019\u001b[0m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5020\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdelete\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: \"['index'] not found in axis\""
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yiBW-vc5LbgB",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data.to_csv('btc_data_end.csv')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cGrXf13HdkEi",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 173
        },
        "outputId": "e10d9738-64e4-4cc7-bf9a-fca1045a8545"
      },
      "source": [
        "!ls /content/drive/My\\ Drive/Colab\\ Notebooks/Linear\\ Regression\\ SKlearn/Real\\ Examples/Webscraper/\n",
        "#data.to_csv('drive/My Drive/Colab Notebooks/Linear Regression SKlearn/Real Examples/Webscraper/BacklinkCheck.csv')\n",
        "from openpyxl import *\n",
        "\n",
        "import time\n",
        "timer = time.strftime('%c')\n",
        "\n",
        "#file.save('Crypto Data {}.csv'.format(timer))\n",
        "data.to_csv('drive/My Drive/Colab Notebooks/Cryptos/Crypto Data/Bitcoin_Historic {}.csv'.format(timer))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "'BacklinkCheckFri 02:22:11.csv'     'CoinbaseScrapeSun 01:19:29.csv'\n",
            "'BacklinkCheckFri 02:22:11.gsheet'  'CoinbaseScrapeSun 01:23:13.gsheet'\n",
            "'BacklinkCheckFri 02:26:36.csv'      FirstCrypto.csv\n",
            " BacklinkCheck.gsheet\t\t     FirstCrypto.gsheet\n",
            "'BacklinkCheckThu 23:08:35.csv'      UrlSamples.gsheet\n",
            "'BacklinkCheckThu 23:11:08.csv'      Webscraper2.21.2020.ipynb\n",
            "'BacklinkCheckThu 23:14:58.csv'      Webscraper_V0.2.ipynb\n",
            "'BacklinkCheckThu 23:25:13.csv'      Webscraper_V0.4.ipynb\n",
            " BacklinkScraperV0.1.ipynb\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Mzn-Lk4CJNj0",
        "colab_type": "text"
      },
      "source": [
        "#If data is already pre-compiled\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PrDNG5nuXbny",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "btc_data = pd.read_csv('BTC_08-13.csv')\n",
        "xlm_data = pd.read_csv('Stellar Lumens XLM - Sheet1.csv')"
      ],
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hPPuhxmNSidS",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "btc_data.dropna(how='all', inplace=True)"
      ],
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gd2zIiPHTyte",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 411
        },
        "outputId": "3ecaeb7d-5339-4d6e-a569-d87777e60167"
      },
      "source": [
        "btc_data"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Open</th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "      <th>Close</th>\n",
              "      <th>Volume</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>4/28/2013</td>\n",
              "      <td>135.30</td>\n",
              "      <td>135.98</td>\n",
              "      <td>132.10</td>\n",
              "      <td>134.21</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>4/29/2013</td>\n",
              "      <td>134.44</td>\n",
              "      <td>147.49</td>\n",
              "      <td>134.00</td>\n",
              "      <td>144.54</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4/30/2013</td>\n",
              "      <td>144.00</td>\n",
              "      <td>146.93</td>\n",
              "      <td>134.05</td>\n",
              "      <td>139.00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5/1/2013</td>\n",
              "      <td>139.00</td>\n",
              "      <td>139.89</td>\n",
              "      <td>107.72</td>\n",
              "      <td>116.99</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5/2/2013</td>\n",
              "      <td>116.38</td>\n",
              "      <td>125.60</td>\n",
              "      <td>92.28</td>\n",
              "      <td>105.21</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2662</th>\n",
              "      <td>8/11/2020</td>\n",
              "      <td>11881.65</td>\n",
              "      <td>11932.71</td>\n",
              "      <td>11195.71</td>\n",
              "      <td>11410.53</td>\n",
              "      <td>2.703978e+10</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2663</th>\n",
              "      <td>8/12/2020</td>\n",
              "      <td>11404.60</td>\n",
              "      <td>11748.40</td>\n",
              "      <td>11249.61</td>\n",
              "      <td>11584.93</td>\n",
              "      <td>2.506455e+10</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2664</th>\n",
              "      <td>8/13/2020</td>\n",
              "      <td>11588.41</td>\n",
              "      <td>11796.40</td>\n",
              "      <td>11216.87</td>\n",
              "      <td>11784.14</td>\n",
              "      <td>2.752220e+10</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2665</th>\n",
              "      <td>8/14/2020</td>\n",
              "      <td>11772.66</td>\n",
              "      <td>12150.99</td>\n",
              "      <td>11685.46</td>\n",
              "      <td>11768.87</td>\n",
              "      <td>2.423796e+10</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2666</th>\n",
              "      <td>8/15/2020</td>\n",
              "      <td>11768.70</td>\n",
              "      <td>11963.20</td>\n",
              "      <td>11768.70</td>\n",
              "      <td>11865.70</td>\n",
              "      <td>2.335492e+10</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2667 rows × 7 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "           Date      Open      High  ...     Close        Volume  Unnamed: 6\n",
              "0     4/28/2013    135.30    135.98  ...    134.21  0.000000e+00         NaN\n",
              "1     4/29/2013    134.44    147.49  ...    144.54  0.000000e+00         NaN\n",
              "2     4/30/2013    144.00    146.93  ...    139.00  0.000000e+00         NaN\n",
              "3      5/1/2013    139.00    139.89  ...    116.99  0.000000e+00         NaN\n",
              "4      5/2/2013    116.38    125.60  ...    105.21  0.000000e+00         NaN\n",
              "...         ...       ...       ...  ...       ...           ...         ...\n",
              "2662  8/11/2020  11881.65  11932.71  ...  11410.53  2.703978e+10         NaN\n",
              "2663  8/12/2020  11404.60  11748.40  ...  11584.93  2.506455e+10         NaN\n",
              "2664  8/13/2020  11588.41  11796.40  ...  11784.14  2.752220e+10         NaN\n",
              "2665  8/14/2020  11772.66  12150.99  ...  11768.87  2.423796e+10         NaN\n",
              "2666  8/15/2020  11768.70  11963.20  ...  11865.70  2.335492e+10         NaN\n",
              "\n",
              "[2667 rows x 7 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "3dIK2p9jIpeF",
        "colab_type": "text"
      },
      "source": [
        "#BTC Chart, skip these sections corresponding to each crypto\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sZecedt3G79H",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 624
        },
        "outputId": "48a5150b-83f9-4dc1-9f24-109b47e1a30a"
      },
      "source": [
        "price = btc_data[['Close']]\n",
        "plt.figure(figsize = (18,9))\n",
        "plt.plot(price)\n",
        "plt.xticks(range(0, btc_data.shape[0],55), btc_data['Date'].loc[::55],rotation=45)\n",
        "plt.title(\"Bitcoin Price\",fontsize=18, fontweight='bold')\n",
        "plt.xlabel('Date',fontsize=18)\n",
        "plt.ylabel('Close Price (USD)',fontsize=18)\n",
        "plt.show()"
      ],
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1296x648 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "AVhF0Kx2JvTx",
        "colab_type": "text"
      },
      "source": [
        "#XLM"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SYL1ndVNIzGz",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 624
        },
        "outputId": "eb862f3e-0334-4eb3-aefd-7d1b6c8311c6"
      },
      "source": [
        "xlm_price = xlm_data[['Close']]\n",
        "\n",
        "plt.figure(figsize = (18,9))\n",
        "plt.plot(xlm_price)\n",
        "plt.xticks(range(0, xlm_data.shape[0],55), xlm_data['Date'].loc[::55],rotation=45)\n",
        "plt.title(\"XLM Price\",fontsize=18, fontweight='bold')\n",
        "plt.xlabel('Date',fontsize=18)\n",
        "plt.ylabel('Close Price (USD)',fontsize=18)\n",
        "plt.show()"
      ],
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1296x648 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HD0Vg2w7K2ch",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 156
        },
        "outputId": "ab39ff44-ac5f-478f-c8ff-9a9d3fa9440f"
      },
      "source": [
        "price.info()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 2642 entries, 0 to 2641\n",
            "Data columns (total 1 columns):\n",
            " #   Column  Non-Null Count  Dtype  \n",
            "---  ------  --------------  -----  \n",
            " 0   Close   2642 non-null   float64\n",
            "dtypes: float64(1)\n",
            "memory usage: 20.8 KB\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qNdZh9u14fNz",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "recent_price = pd.DataFrame(btc_data['Close'][-6::])"
      ],
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "x1-my_0zPMcM",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 200
        },
        "outputId": "375aca81-9911-4d70-b256-1d2c61ff514b"
      },
      "source": [
        "price.tail()"
      ],
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Close</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2662</th>\n",
              "      <td>11410.53</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2663</th>\n",
              "      <td>11584.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2664</th>\n",
              "      <td>11784.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2665</th>\n",
              "      <td>11768.87</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2666</th>\n",
              "      <td>11865.70</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "         Close\n",
              "2662  11410.53\n",
              "2663  11584.93\n",
              "2664  11784.14\n",
              "2665  11768.87\n",
              "2666  11865.70"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iG5SftW97W_G",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 230
        },
        "outputId": "4b7f0fd9-aabc-4318-f5b8-f07ce37cfac8"
      },
      "source": [
        "recent_price"
      ],
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Close</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2661</th>\n",
              "      <td>11878.11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2662</th>\n",
              "      <td>11410.53</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2663</th>\n",
              "      <td>11584.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2664</th>\n",
              "      <td>11784.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2665</th>\n",
              "      <td>11768.87</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2666</th>\n",
              "      <td>11865.70</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "         Close\n",
              "2661  11878.11\n",
              "2662  11410.53\n",
              "2663  11584.93\n",
              "2664  11784.14\n",
              "2665  11768.87\n",
              "2666  11865.70"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "N8JmBPsQ8EyM",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "67e43c6e-0ec4-405c-ea7f-0f0e5783685d"
      },
      "source": [
        "type(price)"
      ],
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pandas.core.frame.DataFrame"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IUaafCM70_86",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "del model"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mnBJw1E1M3Dc",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from sklearn.preprocessing import MinMaxScaler\n",
        "min_max_scaler = MinMaxScaler()\n",
        "\n",
        "norm_data = min_max_scaler.fit_transform(price.values)\n",
        "norm_preds = min_max_scaler.fit_transform(recent_price.values)"
      ],
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "m4bGE07NM-Pk",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def univariate_data(dataset, start_index, end_index, history_size, target_size):\n",
        "  data = []\n",
        "  labels = []\n",
        "\n",
        "  start_index = start_index + history_size\n",
        "  if end_index is None:\n",
        "    end_index = len(dataset) - target_size\n",
        "\n",
        "  for i in range(start_index, end_index):\n",
        "    indices = range(i-history_size, i)\n",
        "    # Reshape data from (history_size,) to (history_size, 1)\n",
        "    data.append(np.reshape(dataset[indices], (history_size, 1)))\n",
        "    labels.append(dataset[i+target_size])\n",
        "  return np.array(data), np.array(labels)"
      ],
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uX2Xm6J-sJ5O",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "63785f82-79c1-4ca1-fcde-816575ba0b58"
      },
      "source": [
        "len(norm_data)"
      ],
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2667"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "caCosWh5sYyN",
        "colab_type": "text"
      },
      "source": [
        "#The next split for norm_data is relevant to create our train/test"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KxRVU9j_NUiQ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "past_history = 5\n",
        "future_target = 1\n",
        "\n",
        "\n",
        "\n",
        "x_train, y_train = univariate_data(norm_data,\n",
        "                                   0,\n",
        "                                   2120,\n",
        "                                   past_history,\n",
        "                                   future_target)\n",
        "\n",
        "x_test, y_test = univariate_data(norm_data,\n",
        "                                 2121,\n",
        "                                 2666,\n",
        "                                 past_history,\n",
        "                                 future_target)\n",
        "\n",
        "pred_test, y_pred = univariate_data(norm_preds, 0, None, past_history, future_target)"
      ],
      "execution_count": 26,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_a2r393NziWf",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 675
        },
        "outputId": "b77a29ed-6715-4be5-856e-83628e98140f"
      },
      "source": [
        "x_test"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[[0.18641029],\n",
              "        [0.18426093],\n",
              "        [0.18452342],\n",
              "        [0.18341888],\n",
              "        [0.18263706]],\n",
              "\n",
              "       [[0.18426093],\n",
              "        [0.18452342],\n",
              "        [0.18341888],\n",
              "        [0.18263706],\n",
              "        [0.18283934]],\n",
              "\n",
              "       [[0.18452342],\n",
              "        [0.18341888],\n",
              "        [0.18263706],\n",
              "        [0.18283934],\n",
              "        [0.18330153]],\n",
              "\n",
              "       ...,\n",
              "\n",
              "       [[0.57323986],\n",
              "        [0.60109157],\n",
              "        [0.60277719],\n",
              "        [0.59360018],\n",
              "        [0.6014534 ]],\n",
              "\n",
              "       [[0.60109157],\n",
              "        [0.60277719],\n",
              "        [0.59360018],\n",
              "        [0.6014534 ],\n",
              "        [0.59742282]],\n",
              "\n",
              "       [[0.60277719],\n",
              "        [0.59360018],\n",
              "        [0.6014534 ],\n",
              "        [0.59742282],\n",
              "        [0.60783871]]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 72
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DjXQdrE18tEM",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "2df9b1e4-7989-499b-ac60-ed814d28cee2"
      },
      "source": [
        "pred_test"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([], dtype=float64)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mVqTIDxxNie4",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from keras.models import Sequential\n",
        "from keras.optimizers import Adam\n",
        "from keras.layers import Dense, LSTM, LeakyReLU, Dropout\n",
        "\n",
        "num_units = 80\n",
        "learning_rate = 0.00001\n",
        "activation_function = 'sigmoid'\n",
        "adam = Adam(lr=learning_rate)\n",
        "loss_function = 'mse'\n",
        "batch_size = 5\n",
        "num_epochs = 70\n",
        "\n",
        "# Initialize the RNN\n",
        "model = Sequential()\n",
        "model.add(LSTM(units = num_units, return_sequences=True, input_shape=(None, 1)))\n",
        "model.add(LSTM(units = num_units, return_sequences=True, input_shape=(None,80)))\n",
        "model.add(LSTM(units = num_units, activation=activation_function, input_shape=(None,80)))\n",
        "model.add(LeakyReLU(alpha=0.5))\n",
        "model.add(Dropout(0.15))\n",
        "model.add(Dense(units = 1))\n",
        "\n",
        "# Compiling the RNN\n",
        "model.compile(optimizer=adam, loss=loss_function)"
      ],
      "execution_count": 27,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kNSYKG8KNmB_",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 372
        },
        "outputId": "b4da392a-8e6f-4fdf-c1b1-08f91bc049f6"
      },
      "source": [
        "model.summary()"
      ],
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "lstm (LSTM)                  (None, None, 80)          26240     \n",
            "_________________________________________________________________\n",
            "lstm_1 (LSTM)                (None, None, 80)          51520     \n",
            "_________________________________________________________________\n",
            "lstm_2 (LSTM)                (None, 80)                51520     \n",
            "_________________________________________________________________\n",
            "leaky_re_lu (LeakyReLU)      (None, 80)                0         \n",
            "_________________________________________________________________\n",
            "dropout (Dropout)            (None, 80)                0         \n",
            "_________________________________________________________________\n",
            "dense (Dense)                (None, 1)                 81        \n",
            "=================================================================\n",
            "Total params: 129,361\n",
            "Trainable params: 129,361\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bNnCu_c9NsNJ",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "6444581d-3a76-41e5-f123-ba70d2eaae8d"
      },
      "source": [
        "history = model.fit(\n",
        "    x_train,\n",
        "    y_train,\n",
        "    validation_split=0.1,\n",
        "    batch_size=batch_size,\n",
        "    epochs=num_epochs,\n",
        "    shuffle=False\n",
        ")\n",
        "\n",
        "loss = history.history['loss']\n",
        "val_loss = history.history['val_loss']\n",
        "\n",
        "epochs = range(len(loss))\n",
        "\n",
        "plt.figure()\n",
        "\n",
        "plt.plot(epochs, loss, 'b', label='Training loss')\n",
        "plt.plot(epochs, val_loss, 'r', label='Validation loss')\n",
        "plt.title(\"Training and Validation Loss\")\n",
        "plt.legend()\n",
        "\n",
        "plt.show()"
      ],
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/70\n",
            "381/381 [==============================] - 4s 11ms/step - loss: 0.0583 - val_loss: 0.0148\n",
            "Epoch 2/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0641 - val_loss: 0.0160\n",
            "Epoch 3/70\n",
            "381/381 [==============================] - 3s 9ms/step - loss: 0.0636 - val_loss: 0.0163\n",
            "Epoch 4/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0597 - val_loss: 0.0154\n",
            "Epoch 5/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0641 - val_loss: 0.0156\n",
            "Epoch 6/70\n",
            "381/381 [==============================] - 3s 9ms/step - loss: 0.0592 - val_loss: 0.0125\n",
            "Epoch 7/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0602 - val_loss: 0.0113\n",
            "Epoch 8/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0549 - val_loss: 0.0093\n",
            "Epoch 9/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0511 - val_loss: 0.0073\n",
            "Epoch 10/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0495 - val_loss: 0.0054\n",
            "Epoch 11/70\n",
            "381/381 [==============================] - 3s 9ms/step - loss: 0.0432 - val_loss: 0.0030\n",
            "Epoch 12/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0391 - val_loss: 0.0026\n",
            "Epoch 13/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0358 - val_loss: 0.0011\n",
            "Epoch 14/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0342 - val_loss: 6.0648e-04\n",
            "Epoch 15/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0310 - val_loss: 4.5987e-04\n",
            "Epoch 16/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0306 - val_loss: 4.7412e-04\n",
            "Epoch 17/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0299 - val_loss: 3.8083e-04\n",
            "Epoch 18/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0302 - val_loss: 4.5355e-04\n",
            "Epoch 19/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0281 - val_loss: 4.2632e-04\n",
            "Epoch 20/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0281 - val_loss: 4.2339e-04\n",
            "Epoch 21/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0279 - val_loss: 3.7602e-04\n",
            "Epoch 22/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0281 - val_loss: 5.5380e-04\n",
            "Epoch 23/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0260 - val_loss: 4.2181e-04\n",
            "Epoch 24/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0258 - val_loss: 3.8124e-04\n",
            "Epoch 25/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0244 - val_loss: 4.1186e-04\n",
            "Epoch 26/70\n",
            "381/381 [==============================] - 3s 9ms/step - loss: 0.0249 - val_loss: 6.5473e-04\n",
            "Epoch 27/70\n",
            "381/381 [==============================] - 3s 9ms/step - loss: 0.0237 - val_loss: 3.7517e-04\n",
            "Epoch 28/70\n",
            "381/381 [==============================] - 3s 9ms/step - loss: 0.0237 - val_loss: 4.3870e-04\n",
            "Epoch 29/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0242 - val_loss: 3.8152e-04\n",
            "Epoch 30/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0236 - val_loss: 4.2284e-04\n",
            "Epoch 31/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0232 - val_loss: 5.5700e-04\n",
            "Epoch 32/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0219 - val_loss: 3.7854e-04\n",
            "Epoch 33/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0211 - val_loss: 3.7663e-04\n",
            "Epoch 34/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0220 - val_loss: 3.8525e-04\n",
            "Epoch 35/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0211 - val_loss: 3.9000e-04\n",
            "Epoch 36/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0197 - val_loss: 4.4956e-04\n",
            "Epoch 37/70\n",
            "381/381 [==============================] - 3s 9ms/step - loss: 0.0191 - val_loss: 3.7607e-04\n",
            "Epoch 38/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0194 - val_loss: 4.4438e-04\n",
            "Epoch 39/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0200 - val_loss: 3.8538e-04\n",
            "Epoch 40/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0185 - val_loss: 3.8958e-04\n",
            "Epoch 41/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0192 - val_loss: 3.8049e-04\n",
            "Epoch 42/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0189 - val_loss: 3.8608e-04\n",
            "Epoch 43/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0186 - val_loss: 3.8999e-04\n",
            "Epoch 44/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0174 - val_loss: 3.8465e-04\n",
            "Epoch 45/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0156 - val_loss: 4.7020e-04\n",
            "Epoch 46/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0159 - val_loss: 3.8235e-04\n",
            "Epoch 47/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0160 - val_loss: 4.8019e-04\n",
            "Epoch 48/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0167 - val_loss: 3.8563e-04\n",
            "Epoch 49/70\n",
            "381/381 [==============================] - 3s 9ms/step - loss: 0.0165 - val_loss: 5.2352e-04\n",
            "Epoch 50/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0156 - val_loss: 4.3978e-04\n",
            "Epoch 51/70\n",
            "381/381 [==============================] - 3s 9ms/step - loss: 0.0155 - val_loss: 4.2734e-04\n",
            "Epoch 52/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0144 - val_loss: 4.0072e-04\n",
            "Epoch 53/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0153 - val_loss: 3.8720e-04\n",
            "Epoch 54/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0143 - val_loss: 4.0817e-04\n",
            "Epoch 55/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0142 - val_loss: 4.5830e-04\n",
            "Epoch 56/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0128 - val_loss: 3.8096e-04\n",
            "Epoch 57/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0136 - val_loss: 3.7982e-04\n",
            "Epoch 58/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0136 - val_loss: 4.7401e-04\n",
            "Epoch 59/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0141 - val_loss: 5.1725e-04\n",
            "Epoch 60/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0129 - val_loss: 4.8866e-04\n",
            "Epoch 61/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0130 - val_loss: 4.0688e-04\n",
            "Epoch 62/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0126 - val_loss: 5.1891e-04\n",
            "Epoch 63/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0121 - val_loss: 4.5835e-04\n",
            "Epoch 64/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0117 - val_loss: 5.8646e-04\n",
            "Epoch 65/70\n",
            "381/381 [==============================] - 3s 9ms/step - loss: 0.0117 - val_loss: 4.0242e-04\n",
            "Epoch 66/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0117 - val_loss: 3.8588e-04\n",
            "Epoch 67/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0116 - val_loss: 4.9736e-04\n",
            "Epoch 68/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0115 - val_loss: 4.3482e-04\n",
            "Epoch 69/70\n",
            "381/381 [==============================] - 3s 8ms/step - loss: 0.0110 - val_loss: 5.1497e-04\n",
            "Epoch 70/70\n",
            "381/381 [==============================] - 3s 9ms/step - loss: 0.0112 - val_loss: 5.7514e-04\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3R3VrgR8OG9_",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 311
        },
        "outputId": "850540e9-1dcf-407f-8569-4c8ad9c71f74"
      },
      "source": [
        "original = pd.DataFrame(min_max_scaler.inverse_transform(y_test))\n",
        "predictions = pd.DataFrame(min_max_scaler.inverse_transform(model.predict(x_test)))\n",
        "\n",
        "ax = sns.lineplot(x=original.index, y=original[0], label=\"Test Data\", color='royalblue')\n",
        "ax = sns.lineplot(x=predictions.index, y=predictions[0], label=\"Prediction\", color='lime')\n",
        "ax.set_title('Bitcoin price', size = 14, fontweight='bold')\n",
        "ax.set_xlabel(\"Days\", size = 14)\n",
        "ax.set_ylabel(\"Cost (USD)\", size = 14)\n",
        "ax.set_xticklabels('', size=10)"
      ],
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 30
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "h-JDoXRAHMY1",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 411
        },
        "outputId": "f04a71e0-bb53-44b9-f1b5-eb82cc7c900b"
      },
      "source": [
        "original"
      ],
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>11508.577796</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>11500.585436</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>11502.324695</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>11501.642661</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>11501.563002</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>535</th>\n",
              "      <td>11683.490384</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>536</th>\n",
              "      <td>11687.687516</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>537</th>\n",
              "      <td>11692.481729</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>538</th>\n",
              "      <td>11692.114239</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>539</th>\n",
              "      <td>11694.444562</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>540 rows × 1 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                0\n",
              "0    11508.577796\n",
              "1    11500.585436\n",
              "2    11502.324695\n",
              "3    11501.642661\n",
              "4    11501.563002\n",
              "..            ...\n",
              "535  11683.490384\n",
              "536  11687.687516\n",
              "537  11692.481729\n",
              "538  11692.114239\n",
              "539  11694.444562\n",
              "\n",
              "[540 rows x 1 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sl_XlT_pHOQa",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 411
        },
        "outputId": "70af1ccf-01b4-49cd-a5ff-30f7aba5bde5"
      },
      "source": [
        "predictions"
      ],
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>11505.222656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>11508.102539</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>11508.831055</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>11509.296875</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>11509.070312</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>535</th>\n",
              "      <td>11685.880859</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>536</th>\n",
              "      <td>11685.670898</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>537</th>\n",
              "      <td>11684.784180</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>538</th>\n",
              "      <td>11685.627930</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>539</th>\n",
              "      <td>11684.951172</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>540 rows × 1 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                0\n",
              "0    11505.222656\n",
              "1    11508.102539\n",
              "2    11508.831055\n",
              "3    11509.296875\n",
              "4    11509.070312\n",
              "..            ...\n",
              "535  11685.880859\n",
              "536  11685.670898\n",
              "537  11684.784180\n",
              "538  11685.627930\n",
              "539  11684.951172\n",
              "\n",
              "[540 rows x 1 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MsMiHY9dV9wr",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "fibs = pd.DataFrame(original)\n",
        "\n",
        "price_min = fibs.min()\n",
        "price_max = fibs.max()"
      ],
      "execution_count": 66,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RWqPvzdvduox",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "22a35cd9-41bc-43db-bc2e-eef96c2e2488"
      },
      "source": [
        "price_min = int(price_min)\n",
        "price_min"
      ],
      "execution_count": 67,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "11499"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GuICMipndq2p",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "5eddd640-0fd4-4e5c-9bfd-8ee33be861d9"
      },
      "source": [
        "price_max = int(price_max)\n",
        "price_max"
      ],
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "11722"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 68
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JOYTq4dUW77c",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 410
        },
        "outputId": "393ee9f7-4a6e-4742-fb7e-b900fc1d9e19"
      },
      "source": [
        "diff = price_max - price_min\n",
        "\n",
        "level1 = price_max - 0.236 * diff\n",
        "level2 = price_max - 0.382 * diff\n",
        "level3 = price_max - 0.618 * diff\n",
        "\n",
        "print(\"Level\", \"Price\")\n",
        "print(\"0 \", price_max)\n",
        "print(\"0.236\", level1)\n",
        "print(\"0.382\", level2)\n",
        "print(\"0.618\", level3)\n",
        "print(\"1 \", price_min)\n",
        "\n",
        "\n",
        "\n",
        "fig, ax = plt.subplots()\n",
        "ax.plot(original, color='black')\n",
        "ax.axhspan(level1, price_min, alpha=0.4, color='lightsalmon')\n",
        "ax.axhspan(level2, level1, alpha=0.5, color='palegoldenrod')\n",
        "ax.axhspan(level3, level2, alpha=0.5, color='palegreen')\n",
        "ax.axhspan(price_max, level3, alpha=0.5, color='powderblue')\n",
        "\n",
        "plt.ylabel(\"Price\")\n",
        "plt.xlabel(\"Date\")\n",
        "plt.legend(loc=2)\n",
        "plt.show()"
      ],
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "No handles with labels found to put in legend.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Level Price\n",
            "0  11722\n",
            "0.236 11669.372\n",
            "0.382 11636.814\n",
            "0.618 11584.186\n",
            "1  11499\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "czj_koSD0rCf",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "len(x_test)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2sLglE5DZ4zo",
        "colab_type": "text"
      },
      "source": [
        "#The next cell allows us to make a prediction from the final days on the dataset we gather from coinbase or coinmarketcap"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MD3Ott5LtqaJ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "ends = original[-7::]\n",
        "ends_test = min_max_scaler.fit_transform(ends.values)\n",
        "pred_test, y_pred = univariate_data(ends_test, 0, 6, past_history, future_target)\n",
        "new_preds = pd.DataFrame(min_max_scaler.inverse_transform(model.predict(pred_test)))"
      ],
      "execution_count": 37,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nn1xfbzjuEcW",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 78
        },
        "outputId": "3bde7dba-c62e-4126-d52a-5374c859ffa0"
      },
      "source": [
        "new_preds"
      ],
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>11689.962891</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "              0\n",
              "0  11689.962891"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2HcLLHN5BjzB",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "ends = ends.append(new_preds)"
      ],
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IZHczMkJYqc5",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "pred_again = ends[-7::]\n",
        "ends_test = min_max_scaler.fit_transform(pred_again.values)\n",
        "pred_test, y_pred = univariate_data(ends_test, 0, 6, past_history, future_target)\n",
        "new_pred_again = pd.DataFrame(min_max_scaler.inverse_transform(model.predict(pred_test)))"
      ],
      "execution_count": 40,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5k44DNnRZFAj",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 78
        },
        "outputId": "0c404c02-0ef6-420d-bbbd-7502a6c02717"
      },
      "source": [
        "new_pred_again"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>11457.305664</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "              0\n",
              "0  11457.305664"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 96
        }
      ]
    }
  ]
}
